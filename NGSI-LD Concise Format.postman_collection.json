{
	"info": {
		"_postman_id": "e17fbbac-6c6d-4264-82f8-565a07b2ff9a",
		"name": "NGSI-LD Concise Format",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "513743",
		"_collection_link": "https://fiware.postman.co/workspace/NGSI-LD-tutorials~60157bf9-a93f-4c6e-90d1-0917133c1872/collection/513743-e17fbbac-6c6d-4264-82f8-565a07b2ff9a?action=share&creator=513743&source=collection_link"
	},
	"item": [
		{
			"name": "Create Operations",
			"item": [
				{
					"name": "Create a New Data Entity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Link",
								"value": "<{{ngsi-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"urn:ngsi-ld:TemperatureSensor:001\",\n    \"type\": \"TemperatureSensor\",\n    \"category\": {\n        \"value\": \"sensor\"\n    },\n    \"temperature\": {\n        \"value\": 25,\n        \"unitCode\": \"CEL\"\n    },\n    \"location\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            13.3505,\n            52.5144\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entities/",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							]
						},
						"description": "This example adds a new **TemperatureSensor** entity to the context.\n\nNew entities can be added by making a POST request to the `/ngsi-ld/v1/entities` endpoint.\n\nThe request will fail if the entity already exists in the context."
					},
					"response": []
				},
				{
					"name": "Create a New Attribute",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Link",
								"value": "<{{ngsi-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"batteryLevel\": {\n        \"value\": 0.8,\n        \"unitCode\": \"C62\"\n    },\n    \"controlledAsset\": {\n        \"object\": \"urn:ngsi-ld:Building:barn002\"\n    }\n}"
						},
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entities/urn:ngsi-ld:TemperatureSensor:001/attrs",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:TemperatureSensor:001",
								"attrs"
							]
						},
						"description": "This example adds a new `batteryLevel` Property and a `controlledAsset` Relationship to the existing\n**TemperatureSensor** entity with `id=urn:ngsi-ld:TemperatureSensor:001`.\n\nNew attributes can be added by making a POST request to the `/ngsi-ld/v1/entities/<entity>/attrs` endpoint.\n\nThe payload should consist of a JSON object holding the attribute names and values as shown.\n\nAll `type=Property` attributes must have a `value` associated with them. All `type=Relationship` attributes must have an\n`object` associated with them which holds the URN of another entity. Well-defined common metadata elements such as\n`unitCode` can be provided as strings, all other metadata should be passed as a JSON object with its own `type` and\n`value` attributes\n\nSubsequent requests using the same `id` will update the value of the attribute in the context."
					},
					"response": []
				},
				{
					"name": "Batch Create New Data Entities or Attributes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Link",
								"value": "<{{ngsi-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/ld+json",
								"type": "text",
								"name": "Accept"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"urn:ngsi-ld:TemperatureSensor:002\",\n        \"type\": \"TemperatureSensor\",\n        \"category\": [\n            \"sensor\"\n        ],\n        \"temperature\": {\n            \"value\": 20,\n            \"unitCode\": \"CEL\"\n        }\n    },\n    {\n        \"id\": \"urn:ngsi-ld:TemperatureSensor:003\",\n        \"type\": \"TemperatureSensor\",\n        \"category\": [\n            \"sensor\",\n            \"actuator\"\n        ],\n        \"temperature\": {\n            \"value\": 2,\n            \"unitCode\": \"CEL\"\n        }\n    },\n    {\n        \"id\": \"urn:ngsi-ld:TemperatureSensor:004\",\n        \"type\": \"TemperatureSensor\",\n        \"category\": {\n            \"type\": \"Property\",\n            \"value\": \"sensor\"\n        },\n        \"temperature\": {\n            \"type\": \"Property\",\n            \"value\": 100,\n            \"unitCode\": \"CEL\"\n        }\n    }\n]"
						},
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entityOperations/create",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entityOperations",
								"create"
							]
						},
						"description": "This example uses the convenience batch processing endpoint to add three new **TemperatureSensor** entities to the\ncontext. Batch create uses the `/ngsi-ld/v1/entityOperations/create` endpoint.\n\nThe request will fail if any of the attributes already exist in the context. The response highlights which actions have\nbeen successful and the reason for failure (if any has occurred)."
					},
					"response": []
				},
				{
					"name": "Batch Create/Overwrite New Data Entities",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Link",
								"value": "<{{ngsi-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/ld+json",
								"type": "text",
								"name": "Accept"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"urn:ngsi-ld:TemperatureSensor:002\",\n        \"type\": \"TemperatureSensor\",\n        \"category\": {\n            \"type\": \"Property\",\n            \"value\": \"sensor\"\n        },\n        \"temperature\": {\n            \"type\": \"Property\",\n            \"value\": 21,\n            \"unitCode\": \"CEL\"\n        }\n    },\n    {\n        \"id\": \"urn:ngsi-ld:TemperatureSensor:003\",\n        \"type\": \"TemperatureSensor\",\n        \"category\": {\n            \"type\": \"Property\",\n            \"value\": \"sensor\"\n        },\n        \"temperature\": {\n            \"type\": \"Property\",\n            \"value\": 27,\n            \"unitCode\": \"CEL\"\n        }\n    }\n]"
						},
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entityOperations/upsert",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entityOperations",
								"upsert"
							]
						},
						"description": "This example uses the convenience batch processing endpoint to add or amend two **TemperatureSensor** entities in the\ncontext.\n\n-   if an entity already exists, the request will update that entity's attributes.\n-   if an entity does not exist, a new entity will be created.\n\nBatch processing for create/overwrite uses the `/ngsi-ld/v1/entityOperations/upsert` endpoint.\n\nA subsequent request containing the same data (i.e. same entities and `actionType=append`) will also succeed won't\nchange the context state. The `modifiedAt` metadata will be amended however."
					},
					"response": []
				}
			],
			"description": "Create Operations map to HTTP POST.\n\n-   The `/ngsi-ld/v1/entities` endpoint is used for creating new entities\n-   The `/ngsi-ld/v1/entities/<entity-id>/attrs` endpoint is used for adding new attributes\n\nAny newly created entity must have `id` and `type` attributes and a valid `@context` definition. All other attributes\nare optional and will depend on the system being modelled. If additional attributes are present though, each should\nspecify both a `type` and a `value`.\n\nThe response will be **201 - Created** if the operation is successful or **409 - Conflict** if the operation fails.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Read Operations",
			"item": [
				{
					"name": "Read a Data Entity (normalized)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Link",
								"value": "<{{ngsi-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "NGSILD-Tenant",
								"value": "openiot",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entities/urn:ngsi-ld:TemperatureSensor:001?options=normalized",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:TemperatureSensor:001"
							],
							"query": [
								{
									"key": "options",
									"value": "normalized"
								}
							]
						},
						"description": "This example reads the full context from an existing **TemperatureSensor** entity with a known `id`.\n\nTemperatureSensor `urn:ngsi-ld:TemperatureSensor:001` is returned as _normalized_ NGSI-LD. Additional metadata is\nreturned because `options=sysAttrs`. By default the `@context` is returned in the payload body (although this could be\nmoved due to content negotiation if the `Accept:application/json` had been set.\n\nIndividual context data entities can be retrieved by making a GET request to the `/ngsi-ld/v1/entities/<entity>`\nendpoint."
					},
					"response": []
				},
				{
					"name": "Read an Attribute from a Data Entity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Link",
								"value": "<{{ngsi-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entities/urn:ngsi-ld:TemperatureSensor:001?attrs=temperature&options=concise",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:TemperatureSensor:001"
							],
							"query": [
								{
									"key": "attrs",
									"value": "temperature"
								},
								{
									"key": "options",
									"value": "concise"
								}
							]
						},
						"description": "This example reads the value of a single attribute (`temperature`) from an existing **TemperatureSensor** entity with a\nknown `id`.\n\nThe sensor `urn:ngsi-ld:TemperatureSensor:001` is reading at 25°C.\n\nBecause `options=keyValues` was not used this is the normalized response including the metadata such as `unitCode`.\nContext data can be retrieved by making a GET request to the `/ngsi-ld/v1/entities/<entity-id>` endpoint and selecting\nthe `attrs` using a comma separated list.\n"
					},
					"response": []
				},
				{
					"name": "Read a Data Entity (key value pairs)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Link",
								"value": "<{{json-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"name": "Accept"
							}
						],
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entities/urn:ngsi-ld:TemperatureSensor:001/?options=keyValues",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:TemperatureSensor:001",
								""
							],
							"query": [
								{
									"key": "options",
									"value": "keyValues",
									"description": "* `keyValues` option in order to get a more compact and brief representation, including just attribute values\n* `values` option combined with a list of attribute values  `attrs`  for an ordered list of attributes only\n"
								}
							]
						},
						"description": "This example reads the key-value pairs  from the context of an existing **TemperatureSensor** entities with a known `id`.\n\nThe response contains an unfiltered list of context data from an entity containing all of the attributes of the\n`urn:ngsi-ld:TemperatureSensor:001`. The payload body does not contain an `@context` attribute since the\n`Accept: application/json` was set.\n\nCombine the `options=keyValues` parameter with the `attrs` parameter to retrieve a limited set of key-value pairs."
					},
					"response": []
				},
				{
					"name": "Read Multiple attributes values from a Data Entity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Link",
								"value": "<{{json-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"name": "Accept"
							}
						],
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entities/urn:ngsi-ld:TemperatureSensor:001/?options=concise&attrs=category,temperature,controlledAsset",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:TemperatureSensor:001",
								""
							],
							"query": [
								{
									"key": "options",
									"value": "concise",
									"description": "* `keyValues` option in order to get a more compact and brief representation, including just attribute values\n* `values` option combined with a list of attribute values  `attrs`  for an ordered list of attributes only"
								},
								{
									"key": "attrs",
									"value": "category,temperature,controlledAsset"
								}
							]
						},
						"description": "\nThis example reads the value of two attributes (`category` and `temperature`) from the context of an existing\n**TemperatureSensor** entity with a known ID.\n\nCombine the `options=keyValues` parameter and the `attrs` parameter to return a list of values."
					},
					"response": []
				},
				{
					"name": "List all Data Entities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Link",
								"value": "<{{ngsi-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entities/?type=TemperatureSensor&options=concise",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "TemperatureSensor"
								},
								{
									"key": "options",
									"value": "concise"
								}
							]
						},
						"description": "This example lists the full context of all **TemperatureSensor** entities.\n\nOn start-up the context was empty, four **TemperatureSensor** entities have been added by create operations so the full\ncontext will now contain four sensors.\n"
					},
					"response": []
				},
				{
					"name": "List all Data Entities - Filtered",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Link",
								"value": "<{{json-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"name": "Accept"
							}
						],
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entities/?type=TemperatureSensor&options=concise&attrs=temperature,",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "TemperatureSensor",
									"description": "Entity type"
								},
								{
									"key": "options",
									"value": "concise"
								},
								{
									"key": "attrs",
									"value": "temperature,"
								}
							]
						},
						"description": "This example lists the `temperature` attribute of all **TemperatureSensor** entities.\n\nThe full context contains four sensors, they are returned in a random order.\n\nFull context data for a specified entity type can be retrieved by making a GET request to the `/ngsi-ld/v1/entities/` endpoint\nand supplying the `type` parameter, combine this with the `options=keyValues` parameter and the `attrs` parameter to\nretrieve key-values."
					},
					"response": []
				},
				{
					"name": "List all Data Entities - GeoJSON",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Link",
								"value": "<{{json-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/geo+json",
								"type": "text",
								"name": "Accept"
							},
							{
								"key": "NGSILD-Tenant",
								"value": "openiot",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entities/?type=Animal&options=concise",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "Animal",
									"description": "Entity type"
								},
								{
									"key": "options",
									"value": "concise"
								}
							]
						},
						"description": "This example lists the `temperature` attribute of all **TemperatureSensor** entities.\n\nThe full context contains four sensors, they are returned in a random order.\n\nFull context data for a specified entity type can be retrieved by making a GET request to the `/ngsi-ld/v1/entities/` endpoint\nand supplying the `type` parameter, combine this with the `options=keyValues` parameter and the `attrs` parameter to\nretrieve key-values."
					},
					"response": []
				},
				{
					"name": "List Data Entity by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Link",
								"value": "<{{ngsi-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"name": "Accept"
							}
						],
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entities/?id=urn:ngsi-ld:TemperatureSensor:001,urn:ngsi-ld:TemperatureSensor:002&options=concise",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "urn:ngsi-ld:TemperatureSensor:001,urn:ngsi-ld:TemperatureSensor:002"
								},
								{
									"key": "options",
									"value": "concise"
								},
								{
									"key": "attrs",
									"value": "temperature",
									"disabled": true
								}
							]
						},
						"description": "This example lists selected data from two **TemperatureSensor** entities chosen by `id`. Note that every `id` must be\nunique, so `type` is not required for this request. To filter by `id` add the entries in a comma delimted list.\n\nThe response details the selected attributes from the selected entities."
					},
					"response": []
				},
				{
					"name": "List Data Entities by id - GeoJSON",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Link",
								"value": "<{{json-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/geo+json",
								"type": "text",
								"name": "Accept"
							},
							{
								"key": "NGSILD-Tenant",
								"value": "openiot",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entities/?id=urn:ngsi-ld:Animal:pig010,urn:ngsi-ld:Animal:pig006&options=concise",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "urn:ngsi-ld:Animal:pig010,urn:ngsi-ld:Animal:pig006"
								},
								{
									"key": "options",
									"value": "concise"
								}
							]
						},
						"description": "This example lists selected data from two **TemperatureSensor** entities chosen by `id`. Note that every `id` must be\nunique, so `type` is not required for this request. To filter by `id` add the entries in a comma delimted list.\n\nThe response details the selected attributes from the selected entities."
					},
					"response": []
				}
			],
			"description": "-   The `/ngsi-ld/v1/entities` endpoint is used for listing entities\n-   The `/ngsi-ld/v1/entities/<entity>` endpoint is used for retrieving the details of a single entity.\n\nFor read operations the `@context` must be supplied in a `Link` header.\n\n#### Filtering\n\n-   The `options` parameter (combined with the `attrs` parameter) can be used to filter the returned fields\n-   The `q` parameter can be used to filter the returned entities",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Update Operations",
			"item": [
				{
					"name": "Overwrite the value of an Attribute value",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Link",
								"value": "<{{ngsi-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"value\": [\"sensor\", \"actuator\"]\n}"
						},
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entities/urn:ngsi-ld:TemperatureSensor:001/attrs/category",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:TemperatureSensor:001",
								"attrs",
								"category"
							]
						},
						"description": "This example updates the value of the `category` attribute of the Entity with `id=urn:ngsi-ld:TemperatureSensor:001`\n\nExisting attribute values can be altered by making a PATCH request to the\n`/ngsi-ld/v1/entities/<entity-id>/attrs/<attribute>` endpoint. The appropriate `@context` should be supplied as a `Link`\nheader."
					},
					"response": []
				},
				{
					"name": "Overwrite Multiple Attributes of a Data Entity",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Link",
								"value": "<{{ngsi-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"category\": [\n        \"sensor\",\n        \"actuator\"\n    ],\n    \"controlledAsset\": {\n        \"object\": \"urn:ngsi-ld:Building:barn001\"\n    }\n}"
						},
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entities/urn:ngsi-ld:TemperatureSensor:001/attrs",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:TemperatureSensor:001",
								"attrs"
							]
						},
						"description": "This example simultaneously updates the values of both the `category` and `controlledAsset` attributes of the Entity\nwith `id=urn:ngsi-ld:TemperatureSensor:001`.\n\n"
					},
					"response": []
				},
				{
					"name": "Batch Update Attributes of Multiple Data Entities",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Link",
								"type": "text",
								"value": "<{{ngsi-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"id\": \"urn:ngsi-ld:TemperatureSensor:003\",\n    \"type\": \"TemperatureSensor\",\n    \"category\": [\n        \"actuator\",\n        \"sensor\"\n      ]\n  },\n  {\n    \"id\": \"urn:ngsi-ld:TemperatureSensor:004\",\n    \"type\": \"TemperatureSensor\",\n    \"category\": [\n        \"actuator\",\n        \"sensor\"\n      ]\n  }\n]"
						},
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entityOperations/upsert?options=update",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entityOperations",
								"upsert"
							],
							"query": [
								{
									"key": "options",
									"value": "update"
								}
							]
						},
						"description": "This example uses the convenience batch processing endpoint to update existing sensors.\n\nBatch processing uses the `/ngsi-ld/v1/entityOperations/upsert` endpoint. The payload body holds an array of the\nentities and attributes we wish to update.The `options=update` parameter indicates we will not remove existing\nattributes if they already exist and have not been included in the payload.\n\nAn alternative would be to use the `/ngsi-ld/v1/entityOperations/update` endpoint. Unlike `upsert`, the `update`\noperation will not silently create any new entities - it fails if the entities do not already exist."
					},
					"response": []
				},
				{
					"name": "Batch Replace Entity Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Link",
								"value": "<{{ngsi-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"id\": \"urn:ngsi-ld:TemperatureSensor:003\",\n    \"type\": \"TemperatureSensor\",\n    \"category\":[\n        \"actuator\",\n        \"sensor\"\n      ]\n  },\n  {\n    \"id\": \"urn:ngsi-ld:TemperatureSensor:004\",\n    \"type\": \"TemperatureSensor\",\n    \"temperature\":  9\n  }\n]"
						},
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/entityOperations/update?options=replace",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entityOperations",
								"update"
							],
							"query": [
								{
									"key": "options",
									"value": "replace"
								}
							]
						},
						"description": "This example uses the convenience batch processing endpoint to replace entity data of existing sensors.\n\nBatch processing uses the `/ngsi-ld/v1/entityOperations/update` endpoint with a payload with the - `options=replace`\nparameter, this means we will overwrite existing entities. `/ngsi-ld/v1/entityOperations/upsert` could also be used if\nnew entities are also to be created."
					},
					"response": []
				}
			],
			"description": "Overwrite operations are mapped to HTTP PATCH:\n\n-   The `/ngsi-ld/v1/entities/<entity-id>/attrs/<attribute>` endpoint is used to update an attribute\n-   The `/ngsi-ld/v1/entities/<entity-id>/attrs` endpoint is used to update multiple attributes\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "NGSI-LD concise Payload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json",
								"type": "text"
							},
							{
								"key": "NGSILD-Tenant",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{ngsi-context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Notify me of movement of an Animal\",\n  \"type\": \"Subscription\",\n  \"entities\": [{\"id\": \"urn:ngsi-ld:Animal:pig003\", \"type\": \"Animal\"}],\n  \"notification\": {\n    \"format\": \"concise\",\n    \"endpoint\": {\n      \"uri\": \"http://tutorial:3000/subscription/low-stock-farm001-ngsild\",\n      \"accept\": \"application/geo+json\"\n    }\n  },\n   \"@context\": \"http://context/ngsi-context.jsonld\"\n}"
						},
						"url": {
							"raw": "http://{{orion}}/ngsi-ld/v1/subscriptions/",
							"protocol": "http",
							"host": [
								"{{orion}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"subscriptions",
								""
							]
						},
						"description": "This second subscription will fire when the `filling` level is between 0.6 and 0.4. The `format` attribute has been altered to inform the subscriber using NGSI-LD normalized format.\n\n#### Subscription Payload:\n\nWhen a `low-stock-farm001-ngsild` event is fired, the response is as shown:\n\n```json\n{\n \"id\": \"urn:ngsi-ld:Notification:5fd0fa684eb81930c97005f3\",\n \"type\": \"Notification\",\n \"subscriptionId\": \"urn:ngsi-ld:Subscription:5fd0f69b4eb81930c97005db\",\n \"notifiedAt\": \"2020-12-09T16:25:12.193Z\",\n \"data\": [\n  {\n   \"id\": \"urn:ngsi-ld:Device:filling001\",\n   \"type\": \"FillingSensor\",\n   \"filling\": {\n    \"type\": \"Property\",\n    \"value\": 0.25,\n    \"unitCode\": \"C62\",\n    \"observedAt\": \"2020-12-09T16:25:12.000Z\"\n   },\n   \"controllingAsset\": {\n    \"type\": \"Relationship\",\n    \"object\": \"urn:ngsi-ld:Building:farm001\",\n    \"observedAt\": \"2020-12-09T16:25:12.000Z\"\n   }\n  }\n ]\n}\n```\n\nBecause the `accept` attribute has been set to `application/json`, the `@context` is sent as a `Link` header rather than an attribute within the payload body."
					},
					"response": []
				}
			],
			"description": "Delete Operations map to HTTP DELETE.\n\n-   The `/ngsi-ld/v1/entities/<entity-id>` endpoint can be used to delete an entity\n-   The `/ngsi-ld/v1/entities/<entity-id>/attrs/<attribute>` endpoint can be used to delete an attribute\n\nThe response will be **204 - No Content** if the operation is successful or **404 - Not Found** if the operation fails.\n\n### Data Relationships\n\nIf there are entities within the context which relate to one another, you must be careful when deleting an entity. You\nwill need to check that no references are left dangling once the entity has been deleted.\n\nOrganizing a cascade of deletions is beyond the scope of this tutorial, but it would be possible using a batch delete\nrequest.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "orion",
			"value": "localhost:1026"
		},
		{
			"key": "ngsi-context.jsonld",
			"value": "http://context/ngsi-context.jsonld"
		},
		{
			"key": "json-context.jsonld",
			"value": "http://context/json-context.jsonld"
		}
	]
}